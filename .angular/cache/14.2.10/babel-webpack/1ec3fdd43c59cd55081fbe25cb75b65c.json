{"ast":null,"code":"import _classCallCheck from \"E:/FinalWeb_NoLogin/HotelProject/project/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/FinalWeb_NoLogin/HotelProject/project/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// import 'rxjs/add/observable/of';\n// import 'rxjs/add/operator/map';\n// import { of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var AuthserviceService = /*#__PURE__*/(function () {\n  var AuthserviceService = /*#__PURE__*/function () {\n    function AuthserviceService(http) {\n      _classCallCheck(this, AuthserviceService);\n\n      this.http = http;\n      this.retUrl = \"home\";\n      this.headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n      this.isloggedIn = false;\n    }\n\n    _createClass(AuthserviceService, [{\n      key: \"login\",\n      value: function login(form) {\n        var _this = this;\n\n        this.http.post(\"http://localhost:4906/api/login\", form.value, {\n          headers: this.headers\n        }).subscribe(function (data) {\n          console.log(data);\n          _this.logindata = data;\n\n          if (_this.logindata.status === 'ok') {\n            _this.isloggedIn = true;\n            _this;\n            return _this.isloggedIn;\n          } else if (_this.logindata.status === 'invalidpwd') {\n            _this.isloggedIn = false;\n            alert(\"Invalid password\");\n          } else {\n            _this.isloggedIn = false;\n            alert(\"InvalidLogin\");\n          }\n        });\n      }\n    }, {\n      key: \"isUserLoggedIn\",\n      value: function isUserLoggedIn() {\n        return this.isloggedIn;\n      }\n    }, {\n      key: \"logoutUser\",\n      value: function logoutUser() {\n        this.isloggedIn = false;\n      }\n    }]);\n\n    return AuthserviceService;\n  }();\n\n  AuthserviceService.ɵfac = function AuthserviceService_Factory(t) {\n    return new (t || AuthserviceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthserviceService,\n    factory: AuthserviceService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthserviceService;\n})();","map":null,"metadata":{},"sourceType":"module"}