{"ast":null,"code":"import _classCallCheck from \"E:/FinalWeb_NoLogin/HotelProject/project/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/FinalWeb_NoLogin/HotelProject/project/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { Subject, merge, fromEvent, timer } from 'rxjs';\nvar BnNgIdleService = /*#__PURE__*/(function () {\n  var BnNgIdleService = /*#__PURE__*/function () {\n    function BnNgIdleService() {\n      _classCallCheck(this, BnNgIdleService);\n\n      this.expired$ = new Subject();\n    }\n\n    _createClass(BnNgIdleService, [{\n      key: \"startWatching\",\n      value: function startWatching(timeOutSeconds) {\n        var _this = this;\n\n        this.idle$ = merge(fromEvent(document, 'mousemove'), fromEvent(document, 'click'), fromEvent(document, 'mousedown'), fromEvent(document, 'keypress'), fromEvent(document, 'DOMMouseScroll'), fromEvent(document, 'mousewheel'), fromEvent(document, 'touchmove'), fromEvent(document, 'MSPointerMove'), fromEvent(window, 'mousemove'), fromEvent(window, 'resize'));\n        this.timeOutMilliSeconds = timeOutSeconds * 1000;\n        this.idleSubscription = this.idle$.subscribe(function (res) {\n          _this.resetTimer();\n        });\n        this.startTimer();\n        return this.expired$;\n      }\n    }, {\n      key: \"startTimer\",\n      value: function startTimer() {\n        var _this2 = this;\n\n        this.timer$ = timer(this.timeOutMilliSeconds, this.timeOutMilliSeconds).subscribe(function (res) {\n          _this2.expired$.next(true);\n        });\n      }\n    }, {\n      key: \"resetTimer\",\n      value: function resetTimer() {\n        this.timer$.unsubscribe();\n        this.startTimer();\n      }\n    }, {\n      key: \"stopTimer\",\n      value: function stopTimer() {\n        this.timer$.unsubscribe();\n        this.idleSubscription.unsubscribe();\n      }\n    }]);\n\n    return BnNgIdleService;\n  }();\n\n  BnNgIdleService.ɵfac = function BnNgIdleService_Factory(t) {\n    return new (t || BnNgIdleService)();\n  };\n\n  BnNgIdleService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BnNgIdleService,\n    factory: BnNgIdleService.ɵfac,\n    providedIn: 'root'\n  });\n  return BnNgIdleService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar BnNgIdleModule = /*#__PURE__*/(function () {\n  var BnNgIdleModule = /*#__PURE__*/_createClass(function BnNgIdleModule() {\n    _classCallCheck(this, BnNgIdleModule);\n  });\n\n  BnNgIdleModule.ɵfac = function BnNgIdleModule_Factory(t) {\n    return new (t || BnNgIdleModule)();\n  };\n\n  BnNgIdleModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BnNgIdleModule\n  });\n  BnNgIdleModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [BnNgIdleService],\n    imports: [[]]\n  });\n  return BnNgIdleModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\r\n * Public API Surface of bn-ng-idle\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { BnNgIdleModule, BnNgIdleService }; //# sourceMappingURL=bn-ng-idle.mjs.map","map":null,"metadata":{},"sourceType":"module"}